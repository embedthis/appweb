/*
    uri-exploit.tst.ts - Test HTML injection prevention in URIs
    Verifies that server rejects URIs with potential HTML injection attacks
 */

import {ttrue, tget} from 'testme'
import {ByteArray, Http, Socket} from 'ejscript'

const HTTP = tget('TM_HTTP') || '127.0.0.1:4100'
let http: Http = new Http

//  Test that HTTP client rejects malicious URI
let caught
try {
    http.get(HTTP + '/directives.esp?weather=sunny&exploit=<html>')
    await http.finalize()
} catch {
    caught = true
}
ttrue(caught)
http.close()

//  Test server response to malicious URI sent via raw socket
let s = new Socket
s.connect(HTTP)
await s.write('GET /directives.esp?weather=sunny&exploit=<html> HTTP/1.0\r\n\r\n')
let response = new ByteArray
let n
while ((n = await s.read(response, -1)) != null) {}
ttrue(response.toString().contains('400 -- Bad Request'))
s.close()
